# -*- coding: utf-8 -*-
"""Data Graph Explorer_Corado.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wBArJo10vFtREuFSdz4NQSYay2viFbkf
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

class CSVCalculator:
    def __init__(self):
        self.df = None
        self.column_names = []

    def load_csv(self, source):
        try:
            if source == 1:
                file_path = input("Enter the path of the local CSV file: ")
                self.df = pd.read_csv(file_path)
            elif source == 2:
                url = input("Enter the URL of the CSV file: ")
                self.df = pd.read_csv(url)
            elif source == 3:
                url = "put_your_url_here"
                self.df = pd.read_csv(url)
            else:
                print("Invalid choice.")
        except Exception as e:
            print("Error loading CSV:", e)

    def print_head(self):
        if self.df is not None:
            print("Column names:")
            self.column_names = self.df.columns.tolist()
            print(self.column_names)
            print("\nFirst two rows:")
            print(self.df.head(2))
        else:
            print("No data loaded.")

    def plot_data(self, x_column, y_column):
        if self.df is not None:
            if x_column in self.column_names and y_column in self.column_names:
                x_data = np.array(self.df[x_column])
                y_data = np.array(self.df[y_column])
                plt.figure(figsize=(8, 6))
                plt.scatter(x_data, y_data)
                plt.xlabel(x_column)
                plt.ylabel(y_column)
                plt.title(f"Scatter Plot: {x_column} vs {y_column}")
                plt.show()
            else:
                print("Invalid column names.")
        else:
            print("No data loaded.")

def main():
    calculator = CSVCalculator()

    print("Welcome to the CSV Calculator!")
    while True:
        print("\nSelect an option:")
        print("1. Load CSV from local file")
        print("2. Load CSV from URL")
        print("3. Load sample CSV (hardcoded URL)")
        print("4. Exit")

        choice = input("Enter your choice: ")
        if choice == '1':
            calculator.load_csv(1)
        elif choice == '2':
            calculator.load_csv(2)
        elif choice == '3':
            calculator.load_csv(3)
        elif choice == '4':
            print("Exiting the CSV Calculator. Goodbye!")
            break
        else:
            print("Invalid choice. Please select a valid option.")

        calculator.print_head()

        if calculator.df is not None:
            while True:
                x_column = input("Enter the name of the x-axis column: ")
                y_column = input("Enter the name of the y-axis column: ")
                calculator.plot_data(x_column, y_column)

                cont = input("Do you want to plot another graph? (yes/no): ")
                if cont.lower() != 'yes':
                    break

if __name__ == "__main__":
    main()
# -*- coding: utf-8 -*-
"""Three Math Games_Corado.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yOp2pm-cSxEJt5m5RYqFSQ9vp62WJp_D

Scatter Plot Game
"""

import matplotlib.pyplot as plt
import random

# Generate random points
def generate_random_points(num_points):
    points = [(random.uniform(-10, 10), random.uniform(-10, 10)) for _ in range(num_points)]
    return points

def scatter_plot_game():
    num_points = 10
    points = generate_random_points(num_points)

    plt.figure(figsize=(8, 8))
    plt.scatter(*zip(*points), color='blue', marker='o')
    plt.title("Scatter Plot Game")
    plt.xlabel("X")
    plt.ylabel("Y")
    plt.grid(True)
    plt.show()

    # Get player input
    for x, y in points:
        player_x = float(input("Enter the x-coordinate: "))
        player_y = float(input("Enter the y-coordinate: "))

        if abs(player_x - x) < 0.1 and abs(player_y - y) < 0.1:
            print("Correct!")
        else:
            print("Incorrect.")

if __name__ == "__main__":
    scatter_plot_game()

"""Algebra practice game"""

import random
from fractions import Fraction

def generate_algebra_equation():
    while True:
        a = random.randint(-10, 10)
        if a != 0:
            break
    b = random.randint(-10, 10)
    c = random.randint(-100, 100)
    equation = f"{a}x + {b} = {c}"
    solution = Fraction(c - b, a)
    return equation, solution

def algebra_practice_game():
    num_problems = 5

    print("Welcome to the Algebra Practice Game!")
    print("Solve the following equations:")

    for _ in range(num_problems):
        equation, solution = generate_algebra_equation()
        player_solution_str = input(f"Solve for x in the equation: {equation}\nYour answer: ")

        try:
            player_solution = Fraction(player_solution_str)
        except ValueError:
            print("Invalid input. Please enter a valid fraction or decimal number.")
            continue

        if abs(player_solution - solution) < 0.01:
            print("Correct!")
        else:
            print("Incorrect. The correct answer is:", solution)

if __name__ == "__main__":
    algebra_practice_game()

"""Projectile Game:"""

import pygame
import random

# Initialize pygame
pygame.init()

# Set up display
width, height = 800, 600
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Projectile Game")

# Colors
white = (255, 255, 255)
black = (0, 0, 0)

# Game loop
running = True
while running:
    screen.fill(white)

    # Draw wall
    wall_height = random.randint(50, 300)
    wall_x = width - 50
    pygame.draw.rect(screen, black, (wall_x, height - wall_height, 30, wall_height))

    pygame.display.flip()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

# Clean up
pygame.quit()